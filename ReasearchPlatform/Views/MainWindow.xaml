<mah:MetroWindow x:Class="ResearchPlatform.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:mah="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns:validators="clr-namespace:ResearchPlatform.Validators" 
        xmlns:src="clr-namespace:ResearchPlatform.Converters"
        xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
        xmlns:Dialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
        Dialog:DialogParticipation.Register="{Binding}"
        mc:Ignorable="d"
        xmlns:lvc="clr-namespace:LiveCharts.Wpf;assembly=LiveCharts.Wpf"
        Title="Research Platform" Height="650" Width="900" WindowState="Maximized"
        FocusManager.FocusedElement="{Binding ElementName=RunButton}">
    <mah:MetroWindow.LeftWindowCommands>
        <mah:WindowCommands>
            <Button Command="{Binding LaunchSettingsCommand}" ToolTip="Open settings window">
                Settings
            </Button>
        </mah:WindowCommands>
    </mah:MetroWindow.LeftWindowCommands>
    <mah:MetroWindow.Resources>
        <src:InverseSingleBooleanConverter x:Key="InverseSingleBooleanConverter"/>
        <src:BoolToVisibilityConverter
         x:Key="BoolToHiddenConverter"
         TrueValue="Visible" FalseValue="Collapsed"/>
        <src:BoolToVisibilityConverter
         x:Key="FalseToVisibleConverter"
         TrueValue="Collapsed" FalseValue="Visible"/>
        <src:InverseBooleanConverter x:Key="InverseBooleanConverter"/>
        <Style TargetType="{x:Type mah:NumericUpDown}">
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <AdornedElementPlaceholder/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="BorderBrush" Value="Red"></Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
    </mah:MetroWindow.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <GroupBox Grid.Row="0" Grid.Column="0" Header="Test Preferences" Margin="10,10,10,10">
            <ScrollViewer VerticalScrollBarVisibility="Auto">
                <StackPanel>
                    <Label Content="Choose algorithms to run:" Margin="10,0,0,5" FontStyle="Italic"/>
                    <Grid Margin="30,0,30,0" x:Name="MatrixGrid" Validation.ErrorTemplate="{StaticResource MahApps.Templates.ValidationError}">
                        <Grid.BindingGroup>
                            <BindingGroup>
                                <BindingGroup.ValidationRules>
                                    <validators:AlgorithmsChosenMatrixValidationRule/>
                                </BindingGroup.ValidationRules>
                            </BindingGroup>
                        </Grid.BindingGroup>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Label Grid.Row="0" Grid.Column="1" Content="DFS" BorderBrush="Gray" BorderThickness="1,1,1,1" Margin="0,5,0,0"/>
                        <!--<Label Grid.Row="0" Grid.Column="2" Content="BFS" BorderBrush="Gray" BorderThickness="1,1,1,1" Margin="0,5,0,0"/>-->
                        <Label Grid.Row="0" Grid.Column="2" Content="Heuristic" BorderBrush="Gray" BorderThickness="1,1,1,1" Margin="0,5,0,0"/>
                        <Label Grid.Row="0" Grid.Column="3" Content="Random" BorderBrush="Gray" BorderThickness="1,1,1,1" Margin="0,5,5,0"/>
                        <Label Grid.Row="1" Grid.Column="0" Content="AHP" BorderBrush="Gray" BorderThickness="1,1,1,1" Margin="5,0,0,0"/>
                        <Label Grid.Row="2" Grid.Column="0" Content="PROMETHEE II" BorderBrush="Gray" BorderThickness="1,1,1,1" Margin="5,0,0,0"/>
                        <Label Grid.Row="3" Grid.Column="0" Content="ELECTRE III" BorderBrush="Gray" BorderThickness="1,1,1,1" Margin="5,0,0,0"/>
                        <Label Grid.Row="4" Grid.Column="0" Content="Own weights" BorderBrush="Gray" BorderThickness="1,1,1,1" Margin="5,0,0,5"/>
                        <Border Grid.Row="1" Grid.Column="1" BorderBrush="Gray" BorderThickness="1,1,1,1">
                            <CheckBox HorizontalContentAlignment="Center" HorizontalAlignment="Center" VerticalAlignment="Center" IsChecked="{Binding Configuration.AlgorithmsMatrix[0][0], UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True}" Checked="OnCommitMatrixBindingGroup" Unchecked="OnCommitMatrixBindingGroup"/>
                        </Border>
                        <!--<Border Grid.Row="1" Grid.Column="2" BorderBrush="Gray" BorderThickness="1,1,1,1">
                            <CheckBox HorizontalContentAlignment="Center" HorizontalAlignment="Center" VerticalAlignment="Center" IsChecked="{Binding Configuration.AlgorithmsMatrix[0][1], UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True}" Checked="OnCommitMatrixBindingGroup" Unchecked="OnCommitMatrixBindingGroup"/>
                        </Border>-->
                        <Border Grid.Row="1" Grid.Column="2" BorderBrush="Gray" BorderThickness="1,1,1,1">
                            <CheckBox HorizontalContentAlignment="Center" HorizontalAlignment="Center" VerticalAlignment="Center" IsChecked="{Binding Configuration.AlgorithmsMatrix[0][1], UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True}" Checked="OnCommitMatrixBindingGroup" Unchecked="OnCommitMatrixBindingGroup"/>
                        </Border>
                        <Border Grid.Row="1" Grid.Column="3" BorderBrush="Gray" BorderThickness="1,1,1,1" Margin="0,0,5,0">
                            <CheckBox HorizontalContentAlignment="Center" HorizontalAlignment="Center" VerticalAlignment="Center" IsChecked="{Binding Configuration.AlgorithmsMatrix[0][2], UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True}" Checked="OnCommitMatrixBindingGroup" Unchecked="OnCommitMatrixBindingGroup"/>
                        </Border>
                        <Border Grid.Row="2" Grid.Column="1" BorderBrush="Gray" BorderThickness="1,1,1,1">
                            <CheckBox HorizontalContentAlignment="Center" HorizontalAlignment="Center" VerticalAlignment="Center" IsChecked="{Binding Configuration.AlgorithmsMatrix[1][0], UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True}" Checked="OnCommitMatrixBindingGroup" Unchecked="OnCommitMatrixBindingGroup"/>
                        </Border>
                        <!--<Border Grid.Row="2" Grid.Column="2" BorderBrush="Gray" BorderThickness="1,1,1,1">
                            <CheckBox HorizontalContentAlignment="Center" HorizontalAlignment="Center" VerticalAlignment="Center" IsChecked="{Binding Configuration.AlgorithmsMatrix[1][1], UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True}" Checked="OnCommitMatrixBindingGroup" Unchecked="OnCommitMatrixBindingGroup"/>
                        </Border>-->
                        <Border Grid.Row="2" Grid.Column="2" BorderBrush="Gray" BorderThickness="1,1,1,1">
                            <CheckBox HorizontalContentAlignment="Center" HorizontalAlignment="Center" VerticalAlignment="Center" IsChecked="{Binding Configuration.AlgorithmsMatrix[1][1], UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True}" Checked="OnCommitMatrixBindingGroup" Unchecked="OnCommitMatrixBindingGroup"/>
                        </Border>
                        <Border Grid.Row="2" Grid.Column="3" BorderBrush="Gray" BorderThickness="1,1,1,1" Margin="0,0,5,0">
                            <CheckBox HorizontalContentAlignment="Center" HorizontalAlignment="Center" VerticalAlignment="Center" IsChecked="{Binding Configuration.AlgorithmsMatrix[1][2], UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True}" Checked="OnCommitMatrixBindingGroup" Unchecked="OnCommitMatrixBindingGroup"/>
                        </Border>
                        <Border Grid.Row="3" Grid.Column="1" BorderBrush="Gray" BorderThickness="1,1,1,1">
                            <CheckBox HorizontalContentAlignment="Center" HorizontalAlignment="Center" VerticalAlignment="Center" IsChecked="{Binding Configuration.AlgorithmsMatrix[2][0], UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True}" Checked="OnCommitMatrixBindingGroup" Unchecked="OnCommitMatrixBindingGroup"/>
                        </Border>
                        <!--<Border Grid.Row="3" Grid.Column="2" BorderBrush="Gray" BorderThickness="1,1,1,1">
                            <CheckBox HorizontalContentAlignment="Center" HorizontalAlignment="Center" VerticalAlignment="Center" IsChecked="{Binding Configuration.AlgorithmsMatrix[2][1], UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True}" Checked="OnCommitMatrixBindingGroup" Unchecked="OnCommitMatrixBindingGroup"/>
                        </Border>-->
                        <Border Grid.Row="3" Grid.Column="2" BorderBrush="Gray" BorderThickness="1,1,1,1">
                            <CheckBox HorizontalContentAlignment="Center" HorizontalAlignment="Center" VerticalAlignment="Center" IsChecked="{Binding Configuration.AlgorithmsMatrix[2][1], UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True}" Checked="OnCommitMatrixBindingGroup" Unchecked="OnCommitMatrixBindingGroup"/>
                        </Border>
                        <Border Grid.Row="3" Grid.Column="3" BorderBrush="Gray" BorderThickness="1,1,1,1" Margin="0,0,5,0">
                            <CheckBox HorizontalContentAlignment="Center" HorizontalAlignment="Center" VerticalAlignment="Center" IsChecked="{Binding Configuration.AlgorithmsMatrix[2][2], UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True}" Checked="OnCommitMatrixBindingGroup" Unchecked="OnCommitMatrixBindingGroup"/>
                        </Border>
                        <Border Grid.Row="4" Grid.Column="1" BorderBrush="Gray" BorderThickness="1,1,1,1" Margin="0,0,0,5">
                            <CheckBox HorizontalContentAlignment="Center" HorizontalAlignment="Center" VerticalAlignment="Center" IsChecked="{Binding Configuration.AlgorithmsMatrix[3][0], UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True}" Checked="OnCommitMatrixBindingGroup" Unchecked="OnCommitMatrixBindingGroup"/>
                        </Border>
                        <!--<Border Grid.Row="4" Grid.Column="2" BorderBrush="Gray" BorderThickness="1,1,1,1" Margin="0,0,0,5">
                            <CheckBox HorizontalContentAlignment="Center" HorizontalAlignment="Center" VerticalAlignment="Center" IsChecked="{Binding Configuration.AlgorithmsMatrix[3][1], UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True}" Checked="OnCommitMatrixBindingGroup" Unchecked="OnCommitMatrixBindingGroup"/>
                        </Border>-->
                        <Border Grid.Row="4" Grid.Column="2" BorderBrush="Gray" BorderThickness="1,1,1,1" Margin="0,0,0,5">
                            <CheckBox HorizontalContentAlignment="Center" HorizontalAlignment="Center" VerticalAlignment="Center" IsChecked="{Binding Configuration.AlgorithmsMatrix[3][1], UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True}" Checked="OnCommitMatrixBindingGroup" Unchecked="OnCommitMatrixBindingGroup"/>
                        </Border>
                        <Border Grid.Row="4" Grid.Column="3" BorderBrush="Gray" BorderThickness="1,1,1,1" Margin="0,0,5,5">
                            <CheckBox HorizontalContentAlignment="Center" HorizontalAlignment="Center" VerticalAlignment="Center" IsChecked="{Binding Configuration.AlgorithmsMatrix[3][2], UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True}" Checked="OnCommitMatrixBindingGroup" Unchecked="OnCommitMatrixBindingGroup"/>
                        </Border>
                    </Grid>
                    <Label Content="Choose weights for goal function:" Margin="10,20,0,5" FontStyle="Italic"/>
                    <Grid x:Name="WeightsGrid" Margin="25,0,0,10" Validation.ErrorTemplate="{StaticResource MahApps.Templates.ValidationError}">
                        <Grid.BindingGroup>
                            <BindingGroup>
                                <BindingGroup.ValidationRules>
                                    <validators:GoalFunctionWeightsValidationRule/>
                                </BindingGroup.ValidationRules>
                            </BindingGroup>
                        </Grid.BindingGroup>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="120"/>
                            <ColumnDefinition MinWidth="90"/>
                            <ColumnDefinition MaxWidth="20"/>
                            <ColumnDefinition MinWidth="160"/>
                            <ColumnDefinition Width="2*"/>
                            <ColumnDefinition Width="3*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Label Grid.Row="0" Grid.Column="0" Content="Weight for utility: " HorizontalAlignment="Right" VerticalAlignment="Center" Height="26"/>
                        <Label Grid.Row="1" Grid.Column="0" Content="Weight for profit: " HorizontalAlignment="Right" VerticalAlignment="Center" Height="26"/>
                        <Label Grid.Row="2" Grid.Column="0" Content="Weight for time: " HorizontalAlignment="Right" VerticalAlignment="Center" Height="26"/>
                        <mah:NumericUpDown Grid.Row="0" Grid.Column="1" HorizontalAlignment="Left" MinWidth="78" Margin="5,5,0,0" VerticalAlignment="Center" Height="26" Minimum="0" Maximum="100" Width="78" Value="{Binding Configuration.GoalFunctionWeights[0], UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True}" ValueChanged="OnCommitBindingGroup" />
                        <mah:NumericUpDown Grid.Row="1" Grid.Column="1" HorizontalAlignment="Left" MinWidth="78" Margin="5,5,0,0" VerticalAlignment="Center" Height="26" Minimum="0" Maximum="100" Width="78" Value="{Binding Configuration.GoalFunctionWeights[1], UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True}" ValueChanged="OnCommitBindingGroup" />
                        <mah:NumericUpDown Grid.Row="2" Grid.Column="1" HorizontalAlignment="Left" MinWidth="78" Margin="5,5,0,0" VerticalAlignment="Center" Height="26" Minimum="0" Maximum="100" Width="78" Value="{Binding Configuration.GoalFunctionWeights[2], UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True}" ValueChanged="OnCommitBindingGroup" />
                        <Label Grid.Column="2" Grid.Row="0" Content="%" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="2,5,0,0" Height="26" Width="20"/>
                        <Label Grid.Column="2" Grid.Row="1" Content="%" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="2,5,0,0" Height="26" Width="20"/>
                        <Label Grid.Column="2" Grid.Row="2" Content="%" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="2,5,0,0" Height="26" Width="20"/>
                        <Button Grid.RowSpan="3" Grid.Column="5" x:Name="RunButton" HorizontalAlignment="Right" Margin="12,0,40,0" Padding="0 5 0 5"  Width="95" MinHeight="80" VerticalAlignment="Center" Command="{Binding RunAlgorithmsCommand}">
                            <Button.IsEnabled>
                                <MultiBinding Converter="{StaticResource InverseBooleanConverter}" Mode="TwoWay">
                                    <Binding ElementName="MatrixGrid" Path="(Validation.HasError)" />
                                    <Binding ElementName="WeightsGrid" Path="(Validation.HasError)" />
                                </MultiBinding>
                            </Button.IsEnabled>
                            <StackPanel Orientation="Horizontal" Height="50">
                                <Label Content="Run" VerticalAlignment="Center" FontSize="18" />
                                <iconPacks:PackIconFontAwesome Kind="CalculatorSolid"
                                                    VerticalAlignment="Center"
                                                    HorizontalAlignment="Center" Margin="2,0,0,0" />
                            </StackPanel>
                        </Button>
                    </Grid>
                </StackPanel>
            </ScrollViewer>
        </GroupBox>
        <GroupBox Grid.Row="1" Grid.Column="0" Header="Input Data" Margin="10,10,10,10" Grid.RowSpan="2">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition MaxHeight="35"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <DockPanel Grid.Row="0">
                    <Label Content="Base: " Margin="0,0,0,5" FontStyle="Italic"/>
                    <Label Content="{Binding Input.Base.Name}" Margin="0,0,0,5"/>
                    <Label Content="Amount of jobs: " Margin="0,0,0,5" FontStyle="Italic"/>
                    <Label Content="{Binding Input.Jobs.Count}" Margin="0,0,0,5"/>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                        <Button Margin="0,0,10,5" Command="{Binding RefreshFileListCommand}" Background="{x:Null}" BorderBrush="{x:Null}">
                            <iconPacks:PackIconFontAwesome Kind="SyncAltSolid"
                                                        VerticalAlignment="Center"
                                                        HorizontalAlignment="Center"/>
                        </Button>
                        <ComboBox ItemsSource="{Binding InputFileList}" SelectedValue="{Binding SelectedInputFile}" MinWidth="150" Margin="0,0,0,5" VerticalAlignment="Center"/>
                    </StackPanel>
                </DockPanel>
                <ListView ItemsSource="{Binding Input.Jobs}" Grid.Row="1"
                              Style="{StaticResource MahApps.Styles.ListView.Virtualized}" ScrollViewer.CanContentScroll="True" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Auto">
                    <ListView.View>
                        <GridView>
                            <GridViewColumn Header="ID" DisplayMemberBinding="{Binding Path=ID}" />
                            <GridViewColumn Header="From" DisplayMemberBinding="{Binding From}" />
                            <GridViewColumn Header="To" DisplayMemberBinding="{Binding To}" />
                            <GridViewColumn Header="Price" DisplayMemberBinding="{Binding Price, StringFormat=C,  ConverterCulture='pl-PL'}" />
                            <GridViewColumn Header="Pickup time" DisplayMemberBinding="{Binding Pickup}" />
                            <GridViewColumn Header="Delivery time" DisplayMemberBinding="{Binding Delivery}" />
                            <GridViewColumn Header="Loading time" DisplayMemberBinding="{Binding LoadingTime, StringFormat=0 min}"/>
                            <GridViewColumn Header="Client opinion" DisplayMemberBinding="{Binding ClientOpinion, StringFormat=N2}"/>
                            <GridViewColumn Header="Type of loading" DisplayMemberBinding="{Binding TypeOfLoading}"/>
                            <GridViewColumn Header="Seizure risk" DisplayMemberBinding="{Binding SeizureRisk}"/>
                        </GridView>
                    </ListView.View>
                </ListView>
            </Grid>
        </GroupBox>
        <Grid Grid.Column="1" Grid.RowSpan="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="3*"/>
                <RowDefinition Height="2*"/>
            </Grid.RowDefinitions>
            <GroupBox Grid.Row="0" Grid.Column="1" Header="Algorithms Results" Margin="10,10,10,10">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition MaxHeight="25"/>
                    </Grid.RowDefinitions>
                    <iconPacks:PackIconFontAwesome Visibility="{Binding ShowResults, Converter={StaticResource FalseToVisibleConverter}}" Kind="ChartBarSolid"
                                                            VerticalAlignment="Stretch"
                                                            HorizontalAlignment="Stretch" Width="100" Height="100"/>
                    <lvc:CartesianChart Grid.Row="0" x:Name="RankGraph" Series="{Binding Series}" LegendLocation="Right" Visibility="{Binding ShowResults, Converter={StaticResource BoolToHiddenConverter}}">
                        <lvc:CartesianChart.AxisX>
                            <lvc:Axis Title="Algorithms" Labels="{Binding Labels, Mode=TwoWay}">
                                <lvc:Axis.Separator>
                                    <lvc:Separator Step="1" />
                                </lvc:Axis.Separator>
                            </lvc:Axis>
                        </lvc:CartesianChart.AxisX>
                        <lvc:CartesianChart.AxisY>
                            <lvc:Axis Title="{Binding AxisYName}" MinValue="{Binding MinYValue}">
                                <lvc:Axis.Separator>
                                    <lvc:Separator Step="{Binding StepSize}"/>
                                </lvc:Axis.Separator>
                            </lvc:Axis>
                        </lvc:CartesianChart.AxisY>
                        <lvc:CartesianChart.DataTooltip>
                            <lvc:DefaultTooltip BulletSize="20" Background="Gray" ShowTitle="False"/>
                        </lvc:CartesianChart.DataTooltip>
                    </lvc:CartesianChart>
                    <StackPanel Grid.Row="1" Visibility="{Binding ShowResults, Converter={StaticResource BoolToHiddenConverter}}" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="5,0,5,0">
                        <Button Content="Duration" Padding="5,2,5,2" FontSize="8" Margin="0,0,5,0" FontWeight="Normal" Height="20" Command="{Binding DrawDurationPlotCommand}">
                            <Button.Background>
                                <SolidColorBrush Color="{DynamicResource MahApps.Colors.Gray}"/>
                            </Button.Background>
                        </Button>
                        <Button Content="Nodes" Padding="5,2,5,2" FontSize="8" Margin="0,0,5,0" FontWeight="Normal" Height="20" Command="{Binding DrawNodesPlotCommand}">
                            <Button.Background>
                                <SolidColorBrush Color="{DynamicResource MahApps.Colors.Gray}"/>
                            </Button.Background>
                        </Button>
                        <Button Content="Breaks" Padding="5,2,5,2" FontSize="8" FontWeight="Normal" Height="20" Command="{Binding DrawBreaksPlotCommand}">
                            <Button.Background>
                                <SolidColorBrush Color="{DynamicResource MahApps.Colors.Gray}"/>
                            </Button.Background>
                        </Button>
                    </StackPanel>
                </Grid>
            </GroupBox>
            <GroupBox Grid.Row="1" Grid.Column="1" Header="Output Data" Margin="10,10,10,10" Grid.RowSpan="2">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition MaxHeight="30"/>
                        <RowDefinition Height="3*"/>
                        <RowDefinition Height="2*"/>
                    </Grid.RowDefinitions>
                    <iconPacks:PackIconFontAwesome Visibility="{Binding ShowResults, Converter={StaticResource FalseToVisibleConverter}}" Grid.RowSpan="3" Kind="TableSolid"
                                                            VerticalAlignment="Stretch"
                                                            HorizontalAlignment="Stretch" Width="100" Height="100"/>
                    <DockPanel Grid.Row="0" Visibility="{Binding ShowResults, Converter={StaticResource BoolToHiddenConverter}}">
                        <Label Content="Sum of driven minutes: " HorizontalAlignment="Left"/>
                        <Label Content="{Binding DrivenTimeResults}" HorizontalAlignment="Left"/>
                        <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                            <Button Margin="0,0,10,5" Command="{Binding SaveResultsCommand}" Background="{x:Null}" BorderBrush="{x:Null}">
                                <iconPacks:PackIconFontAwesome Kind="DownloadSolid"
                                                            VerticalAlignment="Center"
                                                            HorizontalAlignment="Center"/>
                            </Button>
                            <ComboBox ItemsSource="{Binding AlgorithmsResults, Mode=TwoWay}" SelectedValue="{Binding SelectedAlgorithmResult, Mode=TwoWay}" MinWidth="150" Margin="0,0,0,5" VerticalAlignment="Center" HorizontalAlignment="Right"/>
                        </StackPanel>
                    </DockPanel>
                    <ListView ItemsSource="{Binding JobResults}" Grid.Row="1" Visibility="{Binding ShowResults, Converter={StaticResource BoolToHiddenConverter}}"
                                      Style="{StaticResource MahApps.Styles.ListView.Virtualized}" ScrollViewer.CanContentScroll="True" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Auto">
                        <ListView.View>
                            <GridView>
                                <GridViewColumn Header="ID" Width="30" DisplayMemberBinding="{Binding Path=ID}" />
                                <GridViewColumn Header="From" Width="100" DisplayMemberBinding="{Binding From}" />
                                <GridViewColumn Header="To" Width="100" DisplayMemberBinding="{Binding To}" />
                                <GridViewColumn Header="Price" Width="70" DisplayMemberBinding="{Binding Price, StringFormat=C,  ConverterCulture='pl-PL'}" />
                                <GridViewColumn Header="Pickup time" DisplayMemberBinding="{Binding Pickup}" />
                                <GridViewColumn Header="Delivery time" DisplayMemberBinding="{Binding Delivery}" />
                                <GridViewColumn Header="Loading time" DisplayMemberBinding="{Binding LoadingTime, StringFormat=0 min}"/>
                            </GridView>
                        </ListView.View>
                    </ListView>
                    <ListView ItemsSource="{Binding BreaksResults}" Grid.Row="2" Visibility="{Binding ShowResults, Converter={StaticResource BoolToHiddenConverter}}"
                                      Style="{StaticResource MahApps.Styles.ListView.Virtualized}" ScrollViewer.CanContentScroll="True" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Auto">
                        <ListView.View>
                            <GridView>
                                <GridViewColumn Header="Break place" Width="100" DisplayMemberBinding="{Binding Place}" />
                                <GridViewColumn Header="After driven" Width="100" DisplayMemberBinding="{Binding DrivenTime}" />
                            </GridView>
                        </ListView.View>
                    </ListView>
                </Grid>
            </GroupBox>
        </Grid>
    </Grid>
</mah:MetroWindow>
